include "serialization.conf"

akka {

  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
#     journal.plugin = "cassandra-journal"
#     snapshot-store.plugin = "cassandra-snapshot-store"

    query {
      journal.id = "cassandra-query-journal"
    }
  }


}

datastax-java-driver {
    basic.contact-points = ["localhost:9042"]
    basic.contact-points = [${?CASSANDRA_CLUSTER_HOSTS}":9042"]
    # local-datacenter is new config, doesn't exist in current config, explore akka discovery: https://doc.akka.io/docs/alpakka/2.0/cassandra.html#using-akka-discovery
    basic.load-balancing-policy.local-datacenter = ""
    basic.load-balancing-policy.local-datacenter = ${?CASSANDRA_CLUSTER_DC}
    advanced {
        auth-provider {
            class = PlainTextAuthProvider
            username = ""
            username = ${?CASSANDRA_CLUSTER_USERNAME}
            password = ""
            password = ${?CASSANDRA_CLUSTER_PASSWORD}
        }

        request-tracker {
            class = RequestLogger
            logs {
                slow {
                    threshold = 1000 ms
                    enabled = true
                }
            }
        }
    }
#     advanced.request-tracker {
#         class = RequestLogger
#         logs {
#             success.enabled = true
#             slow {
#                 threshold = 10 ms
#                 enabled = true
#             }
#         }
#     }
}

akka.persistence.cassandra.events-by-tag {
  max-message-batch-size = 30
  max-message-batch-size = ${?TAG_BATCH_SIZE}
  flush-interval = 150ms
  flush-interval = ${?TAG_FLUSH_INTERVAL}
}

akka.persistence.cassandra.journal {
#   contact-points = ["localhost"]
#   contact-points = [${?CASSANDRA_CLUSTER_HOSTS}]
  keyspace = "hmda2_journal"
  keyspace = ${?CASSANDRA_JOURNAL_KEYSPACE}
  table = "journal"
#   session-provider = hmda.persistence.HmdaSessionProvider
  log-queries = on
  slow-query-latency-threshold-millis = 1000
  authentication.username = ""
  authentication.username = ${?CASSANDRA_CLUSTER_USERNAME}
  authentication.password = ""
  authentication.password = ${?CASSANDRA_CLUSTER_PASSWORD}
  events-by-tag.max-message-batch-size = 30
  events-by-tag.max-message-batch-size = ${?TAG_BATCH_SIZE}
  events-by-tag.flush-interval = 150ms
  events-by-tag.flush-interval = ${?TAG_FLUSH_INTERVAL}
  ssl.truststore.path = ""
  ssl.truststore.path = ${?TRUSTSTORE_PATH}
  ssl.truststore.password = ""
  ssl.truststore.password = ${?TRUSTSTORE_PASSWORD}
}

akka.persistence.cassandra.query {
  # reference: https://github.com/akka/akka-persistence-cassandra/blob/v0.101/core/src/main/resources/reference.conf
  # Sequence numbers for a persistenceId is assumed to be monotonically increasing
  # without gaps. That is used for detecting missing events.
  # In early versions of the journal that might not be true and therefore
  # this can be relaxed by setting this property to off.
  gap-free-sequence-numbers = off
}

akka.persistence.cassandra.snapshot {
#   contact-points = ["localhost"]
#   contact-points = [${?CASSANDRA_CLUSTER_HOSTS}]
  keyspace = "hmda2_snapshot"
  keyspace = ${?CASSANDRA_SNAPSHOT_KEYSPACE}
  table = "snapshot"
#   session-provider = hmda.persistence.HmdaSessionProvider
  log-queries = on
  slow-query-latency-threshold-millis = 1000
  authentication.username = ""
  authentication.username = ${?CASSANDRA_CLUSTER_USERNAME}
  authentication.password = ""
  authentication.password = ${?CASSANDRA_CLUSTER_PASSWORD}
  ssl.truststore.path = ""
  ssl.truststore.path = ${?TRUSTSTORE_PATH}
  ssl.truststore.password = ""
  ssl.truststore.password = ${?TRUSTSTORE_PASSWORD}
}

kafka {
  hosts = "localhost:9092"
  hosts = ${?KAFKA_CLUSTER_HOSTS}
  idle-timeout = 5
  idle-timeout = ${?KAFKA_IDLE_TIMEOUT}
  security.protocol=""
  security.protocol=${?KAFKA_SECURITY}
  ssl.truststore.location = ""
  ssl.truststore.location = ${?TRUSTSTORE_PATH}
  ssl.truststore.password = ""
  ssl.truststore.password = ${?TRUSTSTORE_PASSWORD}
  ssl.endpoint = ""
  ssl.endpoint = ${?KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG}
}
